<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
       xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

    <!-- 数据源 -->
    <context:property-placeholder location="classpath:db.properties"/>
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${jdbc.driver}"></property>
        <property name="jdbcUrl" value="${jdbc.url}"></property>
        <property name="user" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>
    </bean>

    <!-- 事务管理器 -->
    <bean id="dataSourceTransactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>
    <!-- 基于注解的事务管理 -->
    <tx:annotation-driven transaction-manager="dataSourceTransactionManager"/>


    <!--  配置SqlSessionFactoryBean
        Mybatis提供的: org.mybatis.spring.SqlSessionFactoryBean
        MP提供的:com.baomidou.mybatisplus.spring.MybatisSqlSessionFactoryBean
     -->
    <bean id="sqlSessionFactoryBean" class="com.baomidou.mybatisplus.spring.MybatisSqlSessionFactoryBean">
        <!-- 数据源 -->
        <property name="dataSource" ref="dataSource"></property>
        <property name="configLocation" value="classpath:mybatis-config.xml"></property>
        <!-- 别名处理 -->
        <property name="typeAliasesPackage" value="com.suzl.mp.gen.beans"></property>

        <!-- 注入全局MP策略配置 -->
        <property name="globalConfig" ref="globalConfiguration"></property>

        <!-- 插件注册 -->
        <property name="plugins">
            <list>
                <!-- 注册分页插件 -->
                <bean class="com.baomidou.mybatisplus.plugins.PaginationInterceptor"></bean>

                <!--
                注册执行分析插件
                1) com.baomidou.mybatisplus.plugins.SqlExplainInterceptor
                2) SQL 执行分析拦截器，只支持 MySQL5.6.3 以上版本
                3) 该插件的作用是分析 DELETE UPDATE 语句,防止小白
                或者恶意进行 DELETE UPDATE 全表操作
                4) 只建议在开发环境中使用，不建议在生产环境使用
                5) 在插件的底层 通过 SQL 语句分析命令:Explain 分析当前的 SQL 语句，
                根据结果集中的 Extra 列来断定当前是否全表操作。
                   -->

                <bean class="com.baomidou.mybatisplus.plugins.SqlExplainInterceptor">
                    <property name="stopProceed" value="true"></property>
                </bean>

                <!--

                    注册性能分析插件
                    1) com.baomidou.mybatisplus.plugins.PerformanceInterceptor
                    2) 性能分析拦截器，用于输出每条 SQL 语句及其执行时间
                    3) SQL 性能执行分析,开发环境使用， 超过指定时间，停止运行。有助于发现问题
                -->
                <bean class="com.baomidou.mybatisplus.plugins.PerformanceInterceptor">
                    <property name="format" value="true"></property>
                    <!--<property name="maxTime" value="10"></property>-->
                </bean>

                <!--
                    注册乐观锁插件
                    1) com.baomidou.mybatisplus.plugins.OptimisticLockerInterceptor
                    2) 如果想实现如下需求: 当要更新一条记录的时候，希望这条记录没有被别人更新
                    3) 乐观锁的实现原理:
                    取出记录时，获取当前 version 2
                    更新时，带上这个 version 2
                    执行更新时， set version = yourVersion+1 where version = yourVersion
                    如果 version 不对，就更新失败
                    4) @Version 用于注解实体字段，必须要有。
                 -->
                <bean class="com.baomidou.mybatisplus.plugins.OptimisticLockerInterceptor">
                </bean>
            </list>
        </property>
    </bean>

    <!-- 定义MybatisPlus的全局策略配置-->
    <bean id="globalConfiguration" class="com.baomidou.mybatisplus.entity.GlobalConfiguration">
        <!-- 在2.3版本以后，dbColumnUnderline 默认值就是true -->
        <property name="dbColumnUnderline" value="true"></property>

        <!-- 全局的主键策略 -->
        <property name="idType" value="0"></property>

        <!-- 全局的表前缀策略配置 -->
        <property name="tablePrefix" value="tbl_"></property>

    </bean>
    <!--
        配置mybatis 扫描mapper接口的路径
     -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.suzl.mp.gen.mapper"></property>
    </bean>
</beans>
